version: v1beta9
images:
  superset:
    image: gcr.io/plaidcloud-build/superset/dev
    preferSyncOverRebuild: true
    build:
      custom:
        command: ./deploy
        args:
        - dev
        - ${DEVSPACE_RANDOM}
    tags:
    - ${DEVSPACE_RANDOM}
  events:
    image: gcr.io/plaidcloud-build/superset/events
    preferSyncOverRebuild: true
    build:
      custom:
        command: ./deploy
        args:
        - events
        - ${DEVSPACE_RANDOM}
    tags:
    - ${DEVSPACE_RANDOM}
  node:
    image: gcr.io/plaidcloud-build/superset/node
    preferSyncOverRebuild: true
    build:
      custom:
        command: ./deploy
        args:
        - node
        - ${DEVSPACE_RANDOM}
    tags:
    - ${DEVSPACE_RANDOM}
deployments:
- name: superset
  helm:
    chart:
      name: ./helm/superset
      version: v0.0.1
    values:
      devMode: true
      extraEnv:
        FLASK_ENV: "development"
      image:
        repository: gcr.io/plaidcloud-build/superset/dev
        tag: latest
        pullPolicy: IfNotPresent
        pullSecret: gcr-key
      node:
        repository: gcr.io/plaidcloud-build/superset/node
      events:
        repository: gcr.io/plaidcloud-build/superset/events
        tag: latest
        pullPolicy: IfNotPresent
        pullSecret: gcr-key
        entrypoint:
          # - "entrypoint"
          - "python"
          - "/plaid/plaid/event_handler.py"
      init:
        enabled: false
        loadExamples: true
      greenplum:
        host: postgres-postgresql-headless
      rabbitmq:
        host: plaid-rabbitmq-headless
        port: 5672
        queue: events
        vhost: plaidcloud-public
        username: plaidcloud-public
        password: plaidcloud-public
      supersetNode:
        command:
          # - "entrypoint"
          - "flask"
          - "run"
          - "--host"
          - "0.0.0.0"
          - "--port"
          - "8088"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts: 
         - ${DEV_NAMESPACE}-viz.plaidcloud.io
        tls:
         - secretName: ingress-cert
           hosts:
            - ${DEV_NAMESPACE}-viz.plaidcloud.io
      oidc:
        enabled: true
        baseUrl: "https://${DEV_NAMESPACE}.plaidcloud.io/"
        cookieName: "_session_id"
        clientId: "${OAUTH_CLIENT_ID}"
        clientSecret: "${OAUTH_CLIENT_SECRET}"
        authEndpoint: https://${DEV_NAMESPACE}.plaidcloud.io/oauth/authorize
        tokenEndpoint: https://${DEV_NAMESPACE}.plaidcloud.io/oauth/token
        jwksEndpoint: https://${DEV_NAMESPACE}.plaidcloud.io/oauth/jwks
        redirectUris:
        - https://${DEV_NAMESPACE}-viz.plaidcloud.io/oidc_callback
      # mapbox:
      #   apiKey: pk.eyJ1IjoiZ2JhdGVzIiwiYSI6ImNqaGkwY25mZzIyZGczZG50MHpxMXk0bXYifQ.KKZQGn5QOn14NTnyNFNczQ
dev:
  ports:
  - imageName: superset
    labelSelector:
      component: superset
    forward:
    - port: 9000
      remotePort: 9000
    reverseForward:
    - port: 4000
      remotePort: 8091
  sync:
  - imageName: superset
    labelSelector:
      app: superset
      component: superset
    containerName: superset
    localSubPath: ./superset
    containerPath: /app/superset
    disableDownload: true
    onUpload:
      execRemote:
        onBatch:
          command: bash
          args:
          - -c
          - "kill -HUP 1"
  - imageName: superset
    labelSelector:
      app: superset
      component: superset
    containerName: superset
    localSubPath: ./plaid
    containerPath: /plaid/plaid
    disableDownload: true
    onUpload:
      execRemote:
        onBatch:
          command: bash
          args:
          - -c
          - "kill -HUP 1"
  - imageName: node
    labelSelector:
      app: superset
      component: superset
    containerName: node
    localSubPath: ./superset-frontend/src
    containerPath: /app/superset-frontend/src
    disableDownload: true
  - imageName: node
    labelSelector:
      app: superset
      component: superset
    containerName: node
    localSubPath: ./superset-frontend/spec
    containerPath: /app/superset-frontend/spec
    disableDownload: true    
  # - imageName: events
  #   labelSelector:
  #     app: superset
  #     component: superset-events
  #   containerName: events
  #   localSubPath: ./plaid
  #   containerPath: /plaid/plaid
  #   disableDownload: true
  #   onUpload:
  #     execRemote:
  #       onBatch:
  #         command: bash
  #         args:
  #         - -c
  #         - "kill -HUP 1"
######################################################################################################
# READ THIS:
#   To set any variables with a source of `env`, copy the `.env-sample` file at the root of
#   this project into a new `.env` file (if it doesn't exist), and add/update the vars there.
#   More info: <https://devspace.sh/cli/docs/configuration/env-file>
######################################################################################################
vars:
- name: DEV_NAMESPACE
  question: Whats your dev namespace name? This can be changed later with `devspace
    set var DEV_NAMESPACE=<new-namespace>`
  source: input
- name: OAUTH_CLIENT_ID
  source: env
- name: OAUTH_CLIENT_SECRET
  source: env
commands:
- name: start
  command: |
    POD_NAME=$(kubectl get pods -l app=superset,component=superset --field-selector status.phase=Running -o jsonpath={.items[0].metadata.name})
    kubectl exec $POD_NAME -- bash -c "entrypoint flask run --host 0.0.0.0 --port 8088"
- name: restart
  command: |
    POD_NAME=$(kubectl get pods -l app=superset,component=superset --field-selector status.phase=Running -o jsonpath={.items[0].metadata.name})
    kubectl exec $POD_NAME -- bash -c "kill -HUP 1"
- name: node
  command: |
    POD_NAME=$(kubectl get pods -l app=superset,component=superset --field-selector status.phase=Running -o jsonpath={.items[0].metadata.name})
    kubectl exec $POD_NAME -c node -- bash -c "/app/docker/docker-frontend.sh"
- name: dev
  command: |
    POD_NAME=$(kubectl get pods -l app=superset,component=superset --field-selector status.phase=Running -o jsonpath={.items[0].metadata.name})
    kubectl exec $POD_NAME -c node -- bash -c "cd /app/superset-frontend && npm run dev"
